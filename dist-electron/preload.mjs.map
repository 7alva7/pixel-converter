{"version":3,"file":"preload.mjs","sources":["../electron/preload.ts"],"sourcesContent":["import { ipcRenderer, contextBridge } from \"electron\";\n\n// --------- Expose some API to the Renderer process ---------\ncontextBridge.exposeInMainWorld(\"ipcRenderer\", {\n  on(...args: Parameters<typeof ipcRenderer.on>) {\n    const [channel, listener] = args;\n    return ipcRenderer.on(channel, (event, ...args) =>\n      listener(event, ...args),\n    );\n  },\n  off(...args: Parameters<typeof ipcRenderer.off>) {\n    const [channel, ...omit] = args;\n    return ipcRenderer.off(channel, ...omit);\n  },\n  send(...args: Parameters<typeof ipcRenderer.send>) {\n    const [channel, ...omit] = args;\n    return ipcRenderer.send(channel, ...omit);\n  },\n  invoke(...args: Parameters<typeof ipcRenderer.invoke>) {\n    const [channel, ...omit] = args;\n    return ipcRenderer.invoke(channel, ...omit);\n  },\n\n  // You can expose other APTs you need here.\n  // ...\n});\n"],"names":["args"],"mappings":";AAGA,cAAc,kBAAkB,eAAe;AAAA,EAC7C,MAAM,MAAyC;AACvC,UAAA,CAAC,SAAS,QAAQ,IAAI;AAC5B,WAAO,YAAY;AAAA,MAAG;AAAA,MAAS,CAAC,UAAUA,UACxC,SAAS,OAAO,GAAGA,KAAI;AAAA,IACzB;AAAA,EACF;AAAA,EACA,OAAO,MAA0C;AAC/C,UAAM,CAAC,SAAS,GAAG,IAAI,IAAI;AAC3B,WAAO,YAAY,IAAI,SAAS,GAAG,IAAI;AAAA,EACzC;AAAA,EACA,QAAQ,MAA2C;AACjD,UAAM,CAAC,SAAS,GAAG,IAAI,IAAI;AAC3B,WAAO,YAAY,KAAK,SAAS,GAAG,IAAI;AAAA,EAC1C;AAAA,EACA,UAAU,MAA6C;AACrD,UAAM,CAAC,SAAS,GAAG,IAAI,IAAI;AAC3B,WAAO,YAAY,OAAO,SAAS,GAAG,IAAI;AAAA,EAAA;AAAA;AAAA;AAK9C,CAAC;"}